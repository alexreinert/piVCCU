#!/bin/bash
CONFIGFILE=/etc/default/pivccu3

. /usr/share/debconf/confmodule

function throw {
  echo $1
  exit 1
}

function run {
  echo -n "$1 ... "
  shift
  ERR=`$* 2>&1` && RC=$? || RC=$?
  if [ $RC -eq 0 ]; then
    echo -e "\033[0;32mDone\033[0;0m"
  else
    echo -e "\033[1;91mFAILED\033[0;0m"
    echo "$ERR"
    exit 1
  fi
}

function add_symlinks {
  if [ ! -e /usr/sbin/pivccu-attach ]; then
    run "Create pivccu-attach symlink" ln -s /var/lib/piVCCU3/pivccu-attach.sh /usr/sbin/pivccu-attach
  fi
  if [ ! -e /usr/sbin/pivccu-info ]; then
    run "Create pivccu-info symlink" ln -s /var/lib/piVCCU3/pivccu-info.sh /usr/sbin/pivccu-info
  fi
  if [ ! -e /usr/sbin/pivccu-backup ]; then
    run "Create pivccu-backup symlink" ln -s /var/lib/piVCCU3/pivccu-backup.sh /usr/sbin/pivccu-backup
  fi
}

function enable_services {
  run "Enable pivccu.service" systemctl enable pivccu.service
  run "Enable pivccu-startupfinished.service" systemctl enable pivccu-startupfinished.service
  run "Enable monitor-hb-rf-eth.service" systemctl enable monitor-hb-rf-eth.service
}

function update_apt_repo {
  wget -q -O - https://apt.pivccu.de/piVCCU/public.key | sudo tee /usr/share/keyrings/pivccu.asc > /dev/null || throw "Error downloading piVCCU APT key"
  for file in /etc/apt/sources.list /etc/apt/sources.list.d/*.list
  do
    if [ -f $file ]; then
      for repo in https://www.debmatic.de/debmatic https://www.pivccu.de/piVCCU
      do
        sed -i "s|deb $repo |deb [signed-by=/usr/share/keyrings/pivccu.asc] https://apt.pivccu.de/piVCCU |g" $file || throw "Error updating repo $repo in $file"
      done
    fi
  done
  apt-key --keyring /etc/apt/trusted.gpg del "2EE7 5239 FB96 1829 848D  0AA0 5412 30BA 05C3 8BC4" || throw "Could not remove old APT key"
}

case "$1" in
  configure|reconfigure|abort-upgrade)
    run "Reload udev rules" udevadm control --reload-rules && udevadm trigger

    run "Create symlinks" add_symlinks

    if [ "$1" = "reconfigure" ] || [ "${DEBCONF_RECONFIGURE}" = "1" ]; then
      db_fset pivccu/rf_mode seen false
      db_input high pivccu/rf_mode || true
    elif [ -e /pivccu.createimage ]; then
      db_set pivccu/rf_mode "Normal"
    elif [ ! -z "$2" ]; then
      db_get pivccu/rf_mode
      if [ -z "$RET" ]; then
        db_set pivccu/rf_mode "Normal"
      fi
    else
      db_input high pivccu/rf_mode || true
    fi

    db_go || true

    db_get pivccu/rf_mode

    case "$RET" in
      "Fake")
        PIVCCU_RF_MODE="Fake"
        ;;
      *)
        PIVCCU_RF_MODE="Normal"
        ;;
    esac

    grep -Eq '^ *PIVCCU_RF_MODE=' $CONFIGFILE || echo "PIVCCU_RF_MODE=" >> $CONFIGFILE
    sed -i $CONFIGFILE -e "s/^ *PIVCCU_RF_MODE=.*/PIVCCU_RF_MODE=\"$PIVCCU_RF_MODE\"/"

    if [ ! -e /pivccu.createimage ]; then 
      if [ -z "$2" ]; then
        if [ "$PIVCCU_RF_MODE" != "Fake" ]; then
          run "Dectect radio hardware" . /var/lib/piVCCU3/detect_hardware.inc
          if [ ! -e /sys/devices/virtual/raw-uart ]; then
            db_input critical pivccu/warn_raw_uart_not_found || true
          elif [ -z "$HM_HMRF_DEV" ] && [ -z "$HM_HMIP_DEV" ]; then
            if [ -f /proc/device-tree/model ] && [ `grep -c "Raspberry Pi 3" /proc/device-tree/model` == 1 ]; then
              if ! cmp -s /proc/device-tree/aliases/uart0 /proc/device-tree/aliases/serial0; then
                db_input critical pivccu/warn_gpio_uart_not_assigned || true
              fi
            fi

            db_input critical pivccu/warn_no_radio_module_found || true
          fi
	fi

        BRIDGE=`brctl show | sed -n 2p | awk '{print $1}'`
        if [ -z "$BRIDGE" ]; then
          db_input critical pivccu/warn_no_bridge_found || true
        fi

        db_go
      fi

      if [ "$1" = "reconfigure" ] || [ "${DEBCONF_RECONFIGURE}" = "1" ]; then
        CHOICES=""
        declare -A DEVICES=()

        for sysdevpath in $(find /sys/bus/usb/devices/usb*/ -name dev); do
          syspath="${sysdevpath%/dev}"

          devname="$(udevadm info -q name -p $syspath)"
          [[ "$devname" == "bus/"* ]] && continue

          declare -A UDEV_PROPERTIES=()
          while IFS='=' read -r a b; do UDEV_PROPERTIES["$a"]="$b"; done < <(udevadm info -q property -p $syspath)

          [[ -z "${UDEV_PROPERTIES[ID_SERIAL]}" ]] && continue

          [[ "${UDEV_PROPERTIES[DEVTYPE]}" == "disk" ]] && continue

	  [[ "${UDEV_PROPERTIES[ID_VENDOR_ID]}:${UDEV_PROPERTIES[ID_MODEL_ID]}" == "1b1f:c020" ]] && continue

          if [ ! -z "$CHOICES" ]; then
            CHOICES="$CHOICES, /dev/$devname (${UDEV_PROPERTIES[ID_SERIAL]})"
          else
            CHOICES="/dev/$devname (${UDEV_PROPERTIES[ID_SERIAL]})"
          fi
          DEVICES["/dev/$devname"]=$syspath
        done

        db_fset pivccu/usbdevices seen false
        db_subst pivccu/usbdevices choices $CHOICES
        db_input high pivccu/usbdevices || true
        db_go

        db_get pivccu/usbdevices

        IFS=","
        SELECTED=($RET)

        NEWDEVCONFIG=""

        for dev in "${SELECTED[@]}"
        do
          dev=`echo "$dev" | awk '{print $1}'`
	  syspath="${DEVICES[$dev]}"

          if [ -z "$syspath" ]; then
            continue
          fi

          declare -A UDEV_PROPERTIES=()
          while IFS='=' read -r a b; do UDEV_PROPERTIES["$a"]="$b"; done < <(udevadm info -q property -p $syspath)

          DEVCONFIG="${UDEV_PROPERTIES[ID_VENDOR_ID]};${UDEV_PROPERTIES[ID_MODEL_ID]};${UDEV_PROPERTIES[ID_SERIAL_SHORT]};${UDEV_PROPERTIES[ID_USB_INTERFACE_NUM]};${UDEV_PROPERTIES[ID_PART_ENTRY_UUID]}"
          if [ -z "$NEWDEVCONFIG" ]; then
            NEWDEVCONFIG="$DEVCONFIG"
          else
            NEWDEVCONFIG="$NEWDEVCONFIG,$DEVCONFIG"
          fi
        done

        grep -Eq '^ *PIVCCU_USB_DEVICES=' $CONFIGFILE || echo "PIVCCU_USB_DEVICES=" >> $CONFIGFILE
        sed -i $CONFIGFILE -e "s/^ *PIVCCU_USB_DEVICES=.*/PIVCCU_USB_DEVICES=\"$NEWDEVCONFIG\"/"
      fi
    fi

    db_stop

    run "Enable services" enable_services

    run "Update APT repository config" update_apt_repo

    if [ ! -e /pivccu.createimage ]; then
      (run "Start piVCCU" systemctl start pivccu.service) || true
    fi
  ;;

  abort-remove|abort-deconfigure)
  ;;

esac

